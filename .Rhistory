sales$Ship.Date <- mdy(sales$Ship.Date)
print(latest_order_date <- which.max(sales$Order.Date))
print(earliest_order_date <- which.min(sales$Order.Date))
# Your code here
sales <- read.delim("data/sales_pipe.txt"
,stringsAsFactors = FALSE
,sep = "|"
)
View(sales)
# Your code here
colnames(sales)[1] <- "Row.ID"
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- as.Date(sales$Ship.Date,
format='%m/%d/%Y'
)
#sales$Ship.Date <- mdy(sales$Ship.Date)
latest_order_date <- which.max(sales$Order.Date)
earliest_order_date <- which.min(sales$Order.Date)
sales$duration_order_days <- difftime(as.POSIXct.numeric(latest_order_date),
as.POSIXct.numeric(earliest_order_date),
units = "days")
# Your code here
sales <- read.delim("data/sales_pipe.txt"
,stringsAsFactors = FALSE
,sep = "|"
)
# Your code here
colnames(sales)[1] <- "Row.ID"
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
mdy(sales$Ship.Date)
#latest_order_date <- which.max(sales$Order.Date)
#earliest_order_date <- which.min(sales$Order.Date)
#sales$duration_order_days <- difftime(as.POSIXct.numeric(latest_order_date),                       as.POSIXct.numeric(earliest_order_date),units = "days")
#sales$duration_order_weeks <- difftime(latest_order_date, earliest_order_date, tz, units = "weeks")
#sales$duration_order_years <- difftime(latest_order_date, earliest_order_date, tz, units = "years")
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
#latest_order_date <- which.max(sales$Order.Date)
#earliest_order_date <- which.min(sales$Order.Date)
#sales$duration_order_days <- difftime(as.POSIXct.numeric(latest_order_date),                       as.POSIXct.numeric(earliest_order_date),units = "days")
#sales$duration_order_weeks <- difftime(latest_order_date, earliest_order_date, tz, units = "weeks")
#sales$duration_order_years <- difftime(latest_order_date, earliest_order_date, tz, units = "years")
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
print(latest_order_date <- which.max(sales$Order.Date))
#earliest_order_date <- which.min(sales$Order.Date)
#sales$duration_order_days <- difftime(as.POSIXct.numeric(latest_order_date),                       as.POSIXct.numeric(earliest_order_date),units = "days")
#sales$duration_order_weeks <- difftime(latest_order_date, earliest_order_date, tz, units = "weeks")
#sales$duration_order_years <- difftime(latest_order_date, earliest_order_date, tz, units = "years")
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
print(latest_order_date <- mdy(which.max(sales$Order.Date))
#earliest_order_date <- which.min(sales$Order.Date)
#sales$duration_order_days <- difftime(as.POSIXct.numeric(latest_order_date),                       as.POSIXct.numeric(earliest_order_date),units = "days")
#sales$duration_order_weeks <- difftime(latest_order_date, earliest_order_date, tz, units = "weeks")
#sales$duration_order_years <- difftime(latest_order_date, earliest_order_date, tz, units = "years")
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
#latest_order_date <- mdy(which.max(sales$Order.Date)
#earliest_order_date <- which.min(sales$Order.Date)
#sales$duration_order_days <- difftime(as.POSIXct.numeric(latest_order_date),                       as.POSIXct.numeric(earliest_order_date),units = "days")
#sales$duration_order_weeks <- difftime(latest_order_date, earliest_order_date, tz, units = "weeks")
#sales$duration_order_years <- difftime(latest_order_date, earliest_order_date, tz, units = "years")
# Your code here
sales <- read.delim("data/sales_pipe.txt"
,stringsAsFactors = FALSE
,sep = "|"
)
# Your code here
colnames(sales)[1] <- "Row.ID"
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
#latest_order_date <- mdy(which.max(sales$Order.Date)
#earliest_order_date <- which.min(sales$Order.Date)
#sales$duration_order_days <- difftime(as.POSIXct.numeric(latest_order_date),                       as.POSIXct.numeric(earliest_order_date),units = "days")
#sales$duration_order_weeks <- difftime(latest_order_date, earliest_order_date, tz, units = "weeks")
#sales$duration_order_years <- difftime(latest_order_date, earliest_order_date, tz, units = "years")
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
max(sales$Order.Date)
#earliest_order_date <- which.min(sales$Order.Date)
#sales$duration_order_days <- difftime(as.POSIXct.numeric(latest_order_date),                       as.POSIXct.numeric(earliest_order_date),units = "days")
#sales$duration_order_weeks <- difftime(latest_order_date, earliest_order_date, tz, units = "weeks")
#sales$duration_order_years <- difftime(latest_order_date, earliest_order_date, tz, units = "years")
# Your code here
sales <- read.delim("data/sales_pipe.txt"
,stringsAsFactors = FALSE
,sep = "|"
)
# Your code here
sales <- read.delim("data/sales_pipe.txt"
,stringsAsFactors = FALSE
,sep = "|"
)
# Your code here
colnames(sales)[1] <- "Row.ID"
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
max(sales$Order.Date)
#earliest_order_date <- which.min(sales$Order.Date)
#sales$duration_order_days <- difftime(as.POSIXct.numeric(latest_order_date),                       as.POSIXct.numeric(earliest_order_date),units = "days")
#sales$duration_order_weeks <- difftime(latest_order_date, earliest_order_date, tz, units = "weeks")
#sales$duration_order_years <- difftime(latest_order_date, earliest_order_date, tz, units = "years")
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
max(sales$Order.Date) - min(sales$Order.Date)
#earliest_order_date <- which.min(sales$Order.Date)
#sales$duration_order_days <- difftime(as.POSIXct.numeric(latest_order_date),                       as.POSIXct.numeric(earliest_order_date),units = "days")
#sales$duration_order_weeks <- difftime(latest_order_date, earliest_order_date, tz, units = "weeks")
#sales$duration_order_years <- difftime(latest_order_date, earliest_order_date, tz, units = "years")
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
num_of_days <- max(sales$Order.Date) - min(sales$Order.Date)
num_of_weeks <- days(num_of_days)/weeks()
#earliest_order_date <- which.min(sales$Order.Date)
#sales$duration_order_days <- difftime(as.POSIXct.numeric(latest_order_date),                       as.POSIXct.numeric(earliest_order_date),units = "days")
#sales$duration_order_weeks <- difftime(latest_order_date, earliest_order_date, tz, units = "weeks")
#sales$duration_order_years <- difftime(latest_order_date, earliest_order_date, tz, units = "years")
# Your code here
sales <- read.delim("data/sales_pipe.txt"
,stringsAsFactors = FALSE
,sep = "|"
)
# Your code here
colnames(sales)[1] <- "Row.ID"
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
num_of_days <- max(sales$Order.Date) - min(sales$Order.Date)
num_of_weeks <- days(num_of_days)/weeks(1)
num_of_years <- days(num_of_days)/years(1)
print(num_of_days)
print(num_of_weeks)
print(num_of_years)
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
num_of_days <- as.interval(max(sales$Order.Date) - min(sales$Order.Date))
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
num_of_days <- interval(max(sales$Order.Date) - min(sales$Order.Date))
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
num_of_days <- interval(max(sales$Order.Date, d) - interval(min(sales$Order.Date),d)
num_of_weeks <- days(num_of_days)/weeks(1)
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
num_of_days <- interval(max(sales$Order.Date, d)) - interval(min(sales$Order.Date),d)
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
num_of_days <- max(sales$Order.Date) - min(sales$Order.Date)
num_of_weeks <- days(num_of_days)/weeks(1)
num_of_years <- days(num_of_days)/years(1)
print(num_of_days)
print(num_of_weeks)
print(num_of_years)
# Your code here
library(forcats)
fct_count(sales$State, sort=TRUE,prop=FALSE)
# Your code here
library(forcats)
fct_count(sales$State, sort=FALSE,prop=FALSE)
# Your code here
library(forcats)
table <- data.Frame(fct_count(sales$State, sort=FALSE,prop=FALSE))
# Your code here
library(forcats)
table <- data.frame(fct_count(sales$State, sort=FALSE,prop=FALSE))
# Your code here
library(forcats)
table <- data.frame(fct_count(sales$State, sort=FALSE,prop=FALSE))
summary(table)
# Your code here
sales <- read.delim("data/sales_pipe.txt"
,stringsAsFactors = FALSE
,sep = "|"
)
# Your code here
colnames(sales)[1] <- "Row.ID"
# Your code here
library(lubridate)
sales$Ship.Date <- mdy(sales$Ship.Date)
sales$Order.Date <- as.Date(sales$Order.Date
,format ="%m/%d/%Y"
)
x = max(sales$Order.Date) - min(sales$Order.Date)
year <- days(x)/years(1)
week <- days(x)/weeks(1)
print(x)
print(year)
print(week)
# Your code here
sales$difference <- (sales$Ship.Date - sales$Order.Date)
result = as.numeric(sum(sales$difference))
avg <- result/nrow(sales)
print(avg)
# or
print(mean(sales$difference))
# Your code here
Customer.Name <- sales[,7]
sales$FN <- sapply(strsplit(Customer.Name, " "), '[',1)
length(grep("Bill", sales$FN))
# Your code here
length(grep("table", sales$Product.Name))
# Your code here
as.data.frame(table(sales$State))
# Your code here
library(forcats)
table <- data.frame(fct_count(sales$State, sort=FALSE,prop=FALSE))
# Your code here
sales <- read.delim("data/sales_pipe.txt"
,stringsAsFactors = FALSE
,sep = "|"
)
# Your code here
colnames(sales)[1] <- "Row.ID"
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
num_of_days <- max(sales$Order.Date) - min(sales$Order.Date)
num_of_weeks <- days(num_of_days)/weeks(1)
num_of_years <- days(num_of_days)/years(1)
print(num_of_days)
print(num_of_weeks)
print(num_of_years)
#Determine number of days to ship order and place
#in new column.
sales$days_to_ship_order <- difftime(sales$Ship.Date, sales$Order.Date, units='days')
mean(sales$days_to_ship_order)
library(stringr)
# Split customer name into first and last name, then count number of customers named 'Bill'
sales$first_name <- str_split_fixed(string=sales$Customer.Name, pattern=" ", n=2)
length(which(sales$first_name=="Bill"))
library(stringr)
length(str_which(sales$Product.Name, "table", negate=FALSE))
# Your code here
library(forcats)
fct_count(sales$State, sort=FALSE,prop=FALSE)
# Your code here
barplot(which(sales$State=="Texas"))
# Your code here
barplot(sales$State=="Texas")
# Your code here
barplot(sales$State)
# Your code here
texas_categories <- which(sales$State=="Texas")
# Your code here
texas_categories <- sales[sales$State=="Texas",sales$Category]
# Your code here
texas_categories <- sales[sales$State=="Texas",]
View(texas_categories)
# Your code here
texas_categories <- sales[sales$State=="Texas",]
barplot(texas_categories)
# Your code here
#texas_categories <- sales[sales$State=="Texas",]
#barplot(texas_categories)
texas_cat <- sales[11]
View(texas_cat)
# Your code here
#texas_categories <- sales[sales$State=="Texas",]
#barplot(texas_categories)
texas_cat <- sales[(sales$State=="Texas"),15]
# Your code here
#texas_categories <- sales[sales$State=="Texas",]
#barplot(texas_categories)
texas_cat <- sales[(sales$State=="Texas"),15]
barplot(texas_cat)[2]
# Your code here
#texas_categories <- sales[sales$State=="Texas",]
#barplot(texas_categories)
texas_cat <- sales[(sales$State=="Texas"),15]
barplot(texas_cat)
# Your code here
#texas_categories <- sales[sales$State=="Texas",]
#barplot(texas_categories)
table(texas_cat <- sales[(sales$State=="Texas"),15])
# Your code here
#texas_categories <- sales[sales$State=="Texas",]
#barplot(texas_categories)
barplot(table(texas_cat <- sales[(sales$State=="Texas"),15]))
# Your code here
sales <- read.delim("data/sales_pipe.txt"
,stringsAsFactors = FALSE
,sep = "|"
)
# Your code here
colnames(sales)[1] <- "Row.ID"
# Your code here
library(lubridate)
sales$Ship.Date <- mdy(sales$Ship.Date)
sales$Order.Date <- as.Date(sales$Order.Date
,format ="%m/%d/%Y"
)
x = max(sales$Order.Date) - min(sales$Order.Date)
year <- days(x)/years(1)
week <- days(x)/weeks(1)
print(x)
print(year)
print(week)
# Your code here
sales$difference <- (sales$Ship.Date - sales$Order.Date)
result = as.numeric(sum(sales$difference))
avg <- result/nrow(sales)
print(avg)
# or
print(mean(sales$difference))
# Your code here
Customer.Name <- sales[,7]
sales$FN <- sapply(strsplit(Customer.Name, " "), '[',1)
length(grep("Bill", sales$FN))
# Your code here
length(grep("table", sales$Product.Name))
# Your code here
texas <- sales[sales$State=="Texas",]
barplot(table(factor(sales$Category)))
# Your code here
#texas_categories <- sales[sales$State=="Texas",]
#barplot(texas_categories)
barplot(factor(table(texas_cat <- sales[(sales$State=="Texas"),15])))
# Your code here
#texas_categories <- sales[sales$State=="Texas",]
barplot(factor(table(texas_categories)))
# Your code here
texas_categories <- sales[sales$State=="Texas",]
barplot(factor(table(texas_categories)))
# Your code here
sales <- read.delim("data/sales_pipe.txt"
,stringsAsFactors = FALSE
,sep = "|"
)
# Your code here
colnames(sales)[1] <- "Row.ID"
library(lubridate)
# First, convert dates to proper format
sales$Order.Date <- as.Date(sales$Order.Date,
format='%m/%d/%Y'
)
sales$Ship.Date <- mdy(sales$Ship.Date)
num_of_days <- max(sales$Order.Date) - min(sales$Order.Date)
num_of_weeks <- days(num_of_days)/weeks(1)
num_of_years <- days(num_of_days)/years(1)
print(num_of_days)
print(num_of_weeks)
print(num_of_years)
#Determine number of days to ship order and place
#in new column.
sales$days_to_ship_order <- difftime(sales$Ship.Date, sales$Order.Date, units='days')
mean(sales$days_to_ship_order)
library(stringr)
# Split customer name into first and last name, then count number of customers named 'Bill'
sales$first_name <- str_split_fixed(string=sales$Customer.Name, pattern=" ", n=2)
length(which(sales$first_name=="Bill"))
library(stringr)
length(str_which(sales$Product.Name, "table", negate=FALSE))
# Your code here
library(forcats)
fct_count(sales$State, sort=FALSE,prop=FALSE)
# Your code here
texas_categories <- sales[sales$State=="Texas",]
barplot(factor(table(texas_categories)))
# Your code here
texas_categories <- sales[sales$State=="Texas",]
barplot(table(factor(texas_categories)))
# Your code here
texas_categories <- sales[sales$State=="Texas",]
barplot(table(factor(texas_categories[2])))
#barplot(factor(table(texas_cat <- sales[(sales$State=="Texas"),15])))
# Your code here
texas_categories <- sales[sales$State=="Texas",]
table(factor(texas_categories[2]))
#barplot(factor(table(texas_cat <- sales[(sales$State=="Texas"),15])))
# Your code here
texas_categories <- sales[sales$State=="Texas",15]
table(factor(texas_categories[2]))
#barplot(factor(table(texas_cat <- sales[(sales$State=="Texas"),15])))
# Your code here
texas_only <- sales[sales$State=="Texas",]
category_only <- texas_only[texas_only$Category]
View(texas_only)
# Your code here
texas_only <- sales[sales$State=="Texas",]
#category_only <- texas_only[texas_only$Category]
table(factor(texas_only$Category))
#barplot(factor(table(texas_cat <- sales[(sales$State=="Texas"),15])))
# Your code here
texas_only <- sales[sales$State=="Texas",]
#category_only <- texas_only[texas_only$Category]
barplot(table(factor(texas_only$Category)))
#barplot(factor(table(texas_cat <- sales[(sales$State=="Texas"),15])))
?aggregate
?which
# Your code here
aggregate(factor(sales$Profit))
?aggregate
# Your code here
aggregate(sales$Profit, list(Region = sales$Region), mean)
# Your code here
sales <- read.delim("data/sales_pipe.txt"
,stringsAsFactors = FALSE
,sep = "|"
)
# Your code here
colnames(sales)[1] <- "Row.ID"
# Your code here
library(lubridate)
sales$Ship.Date <- mdy(sales$Ship.Date)
sales$Order.Date <- as.Date(sales$Order.Date
,format ="%m/%d/%Y"
)
x = max(sales$Order.Date) - min(sales$Order.Date)
year <- days(x)/years(1)
week <- days(x)/weeks(1)
print(x)
print(year)
print(week)
# Your code here
sales$difference <- (sales$Ship.Date - sales$Order.Date)
result = as.numeric(sum(sales$difference))
avg <- result/nrow(sales)
print(avg)
# or
print(mean(sales$difference))
# Your code here
Customer.Name <- sales[,7]
sales$FN <- sapply(strsplit(Customer.Name, " "), '[',1)
length(grep("Bill", sales$FN))
# Your code here
length(grep("table", sales$Product.Name))
# Your code here
as.data.frame(table(sales$State))
# Your code here
texas <- sales[sales$State=="Texas",]
barplot(table(factor(sales$Category)))
# Your code here
aggregate( sales$Profit ~ sales$Region, sales, mean )
# Your code here
aggregate(sales$Profit, list(Region = year(sales$Order.Date), mean)
# Your code here
aggregate(sales$Profit, list(Region = year(sales$Order.Date)), mean)
# Your code here
year = format(sales$Order.Date, format = "%Y")
aggregate( sales$Profit ~ year, sales, mean )
